// <auto-generated />
using System;
using Family.Manager.Infrastructure.Configurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Family.Manager.Infrastructure.Migrations
{
    [DbContext(typeof(FamilyContext))]
    [Migration("20201022012008_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Family.Manager.Domain.Entities.Family", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("character varying(255)");

                    b.Property<string>("CellPhoneNumber")
                        .IsRequired()
                        .HasColumnType("character varying(11)");

                    b.Property<string>("ChurchInformation")
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Observation")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Religion")
                        .HasColumnType("character varying(80)");

                    b.Property<int>("TotalFamilyMembers")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Family");
                });

            modelBuilder.Entity("Family.Manager.Domain.Entities.Kid", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("date");

                    b.Property<Guid>("FamilyId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(255)");

                    b.Property<string>("Observation")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Kid");
                });

            modelBuilder.Entity("Family.Manager.Domain.Entities.Kinship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("character varying(80)");

                    b.Property<Guid>("FamilyId")
                        .HasColumnType("uuid");

                    b.Property<string>("PersonName")
                        .IsRequired()
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.HasIndex("FamilyId");

                    b.ToTable("Kinship");
                });

            modelBuilder.Entity("Family.Manager.Domain.Entities.Kid", b =>
                {
                    b.HasOne("Family.Manager.Domain.Entities.Family", "Family")
                        .WithMany("Kids")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Family.Manager.Domain.ValueObjects.ReligionInformation", "KidReligionInformation", b1 =>
                        {
                            b1.Property<Guid>("KidId")
                                .HasColumnType("uuid");

                            b1.Property<bool>("DoingCatechesis")
                                .HasColumnType("boolean");

                            b1.Property<bool>("DoingConfirmationSacrament")
                                .HasColumnType("boolean");

                            b1.Property<bool>("DoingPerse")
                                .HasColumnType("boolean");

                            b1.Property<bool>("DoneCatechesis")
                                .HasColumnType("boolean");

                            b1.Property<bool>("DoneConfirmationSacrament")
                                .HasColumnType("boolean");

                            b1.Property<bool>("DonePerse")
                                .HasColumnType("boolean");

                            b1.Property<bool>("IsBaptized")
                                .HasColumnType("boolean");

                            b1.HasKey("KidId");

                            b1.ToTable("Kid");

                            b1.WithOwner()
                                .HasForeignKey("KidId");
                        });
                });

            modelBuilder.Entity("Family.Manager.Domain.Entities.Kinship", b =>
                {
                    b.HasOne("Family.Manager.Domain.Entities.Family", "Family")
                        .WithMany("Kinships")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
